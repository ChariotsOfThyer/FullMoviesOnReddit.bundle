def NormalizeURL(url):		return url		def MetadataObjectForURL(url):	page = HTML.ElementFromURL(url)	title = page.xpath("//h2[contains(@class, 'title_font')]")[0].text_content()	summary =  page.xpath("//div[contains(@class, 'summary_film')]")[0].text_content()	thumb = page.xpath("//div[contains(@class, 'film_img')]//img")[0].get('src')		return VideoClipObject(		title = title,		summary = summary,		thumb = Resource.ContentsOfURLWithFallback(url='http://viooz.co' + thumb, fallback='icon-default.png'),	)def MediaObjectsForURL(url):		#strip off title from url before requesting from viooz	url = url.split('?')[0]		return [		MediaObject(			parts = [PartObject(key = WebVideoURL(url))]		)	]